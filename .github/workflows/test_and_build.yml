name: Test and Build

on:
  push:
    branches: 
      - main
      - legacy
    paths-ignore:
      - 'README.md'
      - 'renovate.json'
      - '.github/workflows/update-dockerhub.yml'
      - '.github/workflows/website_build.yml'
      - 'docs'
  pull_request:
    branches: 
      - main
      - legacy
      - 'renovate/**'
      - 'feature/**'
    paths-ignore:
      - 'README.md'
      - 'renovate.json'
      - '.github/workflows/update-dockerhub.yml'
      - '.github/workflows/website_build.yml'
      - 'docs'
  release:
    types: [published] # Triggers when a release is published
  workflow_dispatch: # Allows action to be run manually from the Actions tab

jobs:
  build-docker:
      runs-on: 'ubuntu-latest'
      steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: get dependencies
        run: make composer-install-dev; make npm-install-gh
      - name: make foldersctructure and layout images
        run: make folder-structure-dev; make layout-images-dev         
      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Linux Image
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7
          tags: |
            lan2play/eventula-manager:latest
          build-args: |
            BUILDNODE=GitHub (Run Number: ${{ github.run_number }} Run ID: ${{ github.run_id }})
            BUILDID=${{ github.run_id }}
            BUILDNUMBER=${{ github.run_number }}
            SOURCE_COMMIT=${{ github.sha }}
            SOURCE_REF=${{ github.ref }}
            VERSION="latest"
          no-cache: true
          push: false      
      - name: Build and push Linux Image
        if: ${{ startsWith(github.ref, 'refs/heads/main') && github.event_name == 'push' }}
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7
          tags: |
            lan2play/eventula-manager:main
            lan2play/eventula-manager:latest
          build-args: |
            BUILDNODE=GitHub (Run Number: ${{ github.run_number }} Run ID: ${{ github.run_id }})
            BUILDID=${{ github.run_id }}
            BUILDNUMBER=${{ github.run_number }}
            SOURCE_COMMIT=${{ github.sha }}
            SOURCE_REF=${{ github.ref }}
            VERSION="latest"
          no-cache: true
          push: true
      - name: Build and push Linux legacy Image
        if: ${{ startsWith(github.ref, 'refs/heads/legacy') && github.event_name == 'push' }}
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7
          tags: |
            lan2play/eventula-manager:legacy
          build-args: |
            BUILDNODE=GitHub (Run Number: ${{ github.run_number }} Run ID: ${{ github.run_id }})
            BUILDID=${{ github.run_id }}
            BUILDNUMBER=${{ github.run_number }}
            SOURCE_COMMIT=${{ github.sha }}
            SOURCE_REF=${{ github.ref }}
            VERSION="legacy"
          no-cache: true
          push: true
      - name: Extract version from tag
        if: ${{ github.event_name == 'release' }}
        id: version
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "version_without_v=${VERSION#v}" >> $GITHUB_OUTPUT
      - name: Build and push versioned release Image
        if: ${{ github.event_name == 'release' }}
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7
          tags: |
            lan2play/eventula-manager:${{ steps.version.outputs.version }}
            lan2play/eventula-manager:${{ steps.version.outputs.version_without_v }}
            lan2play/eventula-manager:stable
          build-args: |
            BUILDNODE=GitHub (Run Number: ${{ github.run_number }} Run ID: ${{ github.run_id }})
            BUILDID=${{ github.run_id }}
            BUILDNUMBER=${{ github.run_number }}
            SOURCE_COMMIT=${{ github.sha }}
            SOURCE_REF=${{ github.ref }}
            VERSION=${{ steps.version.outputs.version_without_v }}
          no-cache: true
          push: true